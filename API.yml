openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: http://172.23.2.50:9000
components:
  schemas:
    orderRequestBody:
      type: object
      required:
        - "Name"
        - "Phone"
        - "Gender"
        - "Date"
        - "Time"
        - "Aldult"
        - "Child"
        - "numberOfTable"
      properties:
        Name:
          type: string
          example: "Jack"
        Phone:
          type: string
          example: "0912345678"
        Gender:
          type: integer
          example: 0
        Date:
          type: string
          example: "2023-12-20"
        Time:
          type: string
          example: "18:00"
        Aldult:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
          example: 5
        Child:
          type: integer
          format: int32
          minimum: 0
          maximum: 12
          example: 0
        Table:
          type: array
          items:
            type: integer
            minimum: 1
            maximum: 36
          example: [1,2,3,4,5]
        Remark:
          type: string
    dateSchema:
      type: string
      example: "2023-06-16"
    timeSchema:
      type: string
      example: "12:00"
    aldult:
      type: integer
      example: 2
    child:
      type: integer
      example: 0
    table:
      type: integer
      format: int32
      example: 1
    notifyRequestBody:
      type: object
      required:
        - "Name"
        - "Gender"
        - "Phone"
        - "Date"
        - "Time"
        - "Notify"
      properties:
        Name:
         type: string
         example: "Jack"
        Gender:
         type: integer
         format: int64
         example: 1
        Phone:
         type: string
         example: "0912345678"
        Date:
         type: string
         example: "2023-10-20"
        Time:
         type: string
         example: "18:00"
        Notify:
         type: integer
         format: int32
         example: 1
paths:
  /service/waitter:
    get:
      responses:
        '200':
          description: OK
  /service/callWaitter:
    get:
      parameters:
        - name: tables
          in: query
          schema:
            $ref: "#/components/schemas/table"
      responses:
        '200':
          description: OK
  /tables/status:
    get:
      responses:
        '200':
          description: OK
  /tables/order:
    post:
      requestBody:
        content:
          'application/json':
            schema:
             $ref: "#/components/schemas/orderRequestBody"
      responses:
        '200':
          description: OK
  /tables/orderStatus:
    get:
      parameters:
        - in: query
          name: table
          schema:
            $ref: "#/components/schemas/table"
      responses:
        '200':
          description: OK
  /customer/status:
    get:
      responses:
        '200':
          description: OK
  /order/empty:
    get:
      parameters:
        - in: query
          name: date
          required: true
          schema:
            $ref: "#/components/schemas/dateSchema"
        - in: query
          name: aldult
          required: true
          schema:
            $ref: "#/components/schemas/aldult"
        - in: query
          name: child
          required: true
          schema:
            $ref: "#/components/schemas/child"
      responses:
        '200':
          description: OK
  /order/status:
    get:
      parameters:
        - in: query
          name: date
          required: false
          schema:
            $ref: "#/components/schemas/dateSchema"
      responses:
        '200':
          description: OK
  /order/notify:
    post:
      requestBody:
        content:
          'application/json':
            schema:
             $ref: "#/components/schemas/notifyRequestBody"
      responses:
        '200':
          description: OK

